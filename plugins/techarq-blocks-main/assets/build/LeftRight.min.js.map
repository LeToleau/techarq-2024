{"version":3,"file":"LeftRight.min.js","mappings":"yBAAA,IAAIA,EC6BJ,IDxBe,MAKXC,YAAYC,GACRF,EAAgBE,EAChBC,KAAKC,QACLD,KAAKE,UACT,CAIAD,QACQE,OAAOC,KACPD,OAAOC,IAAIC,UAAW,6BAA4BR,EAAcS,UAAUC,QAAQ,kBAAmB,SAASC,gBAAiBR,KAAKS,gBAE5I,CAIAP,WACI,MAAMQ,EAAOV,KACbW,SAASC,iBAAiB,oBAAoB,WAC1CD,SAASE,iBAAkB,OAAMhB,EAAcS,UAAUC,QAAQ,kBAAmB,SAASC,iBAAiBM,SAAQC,IAClHL,EAAKD,gBAAgBM,EAAM,GAEnC,GACJ,CAMAN,gBAAgBM,IACoC,GAA7CZ,OAAOa,SAASC,KAAKC,QAAQ,YAC5B,IAAIrB,EAAckB,EAAM,GAAGI,cAAe,OAAMtB,EAAcS,UAAUC,QAAQ,kBAAmB,SAASC,kBAE5G,IAAIX,EAAckB,EAE1B,GCxCJ,MAOIjB,YAAYiB,GAERK,QAAQC,KAAKN,EACjB,CAOAO,iBACI,MAAO,WACX,G","sources":["webpack://conicdev-boilerplate/./assets/js/blocks.js","webpack://conicdev-boilerplate/./src/Blocks/LeftRight/LeftRight.js"],"sourcesContent":["let BlockClassUse;\n\n/**\n * Class to instantiate all JS blocks\n */\nexport default class ACFBlock {\n    /**\n     * ACFBlock constructor method\n     * @param {function} blockClass to instantiate\n     */\n    constructor(blockClass) {\n        BlockClassUse = blockClass;\n        this.admin();\n        this.frontend();\n    }\n    /**\n     * Initialize dynamic block preview (editor)\n     */\n    admin() {\n        if (window.acf) {\n            window.acf.addAction(`render_block_preview/type=${BlockClassUse.getName().replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()}`, this.initializeBlock);\n        }\n    }\n    /**\n     * Initialize each block on page load (front end)\n     */\n    frontend() {\n        const self = this;\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            document.querySelectorAll(`.js-${BlockClassUse.getName().replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()}`).forEach(block => {\n                self.initializeBlock(block)\n            })\n        });\n    }\n\n    /**\n     * Initialize Block js\n     * @param {HTMLElement} block \n     */\n    initializeBlock(block) {\n        if(window.location.href.indexOf('wp-admin') != -1){\n            new BlockClassUse(block[0].querySelector(`.js-${BlockClassUse.getName().replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()}`));\n        }else{\n            new BlockClassUse(block);\n        }\n    }\n}","import ACFBlock from '../../../assets/js/blocks';\n\n/**\n * Custom LeftRight Block, describe your block here.\n */\nclass LeftRight{\n\n    /**\n     * Constructor method\n     * \n     * @param {HTMLElement} block \n     */\n    constructor(block){\n        // Your methods init and porps\n        console.warn(block)\n    }\n\n    /**\n     * The name of your block, don't modify this static method!!\n     * \n     * @return {string}\n     */\n    static getName() {\n        return 'LeftRight';\n    }\n\n    // Your methods\n}\n\nnew ACFBlock(LeftRight);\n    "],"names":["BlockClassUse","constructor","blockClass","this","admin","frontend","window","acf","addAction","getName","replace","toLowerCase","initializeBlock","self","document","addEventListener","querySelectorAll","forEach","block","location","href","indexOf","querySelector","console","warn","static"],"sourceRoot":""}